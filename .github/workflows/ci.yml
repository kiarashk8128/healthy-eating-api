name: CI

on: [push, pull_request]

env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ vars.DEBUG }}
      ALLOWED_HOSTS: ${{ vars.ALLOWED_HOSTS }}
      POSTGRES_NAME: ${{ vars.POSTGRES_NAME }}
      POSTGRES_USER: ${{ vars.POSTGRES_USER }}
      POSTGRES_HOST: ${{ vars.POSTGRES_HOST }}
jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: ${{ vars.POSTGRES_DB }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd="pg_isready -U test_user -d test_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Set up the database
        run: |
          docker-compose exec backend python manage.py migrate

      - name: Run tests
        run: docker-compose exec backend python manage.py test accounts.tests
